#!/bin/bash

# Function: Print a help message.
display_help() {
  echo "snakeSV pipeline (powered by Snakemake)"
  echo ""
  echo "Usage: $0 --configfile FILE [Snakemake options]"
  echo ""
  echo " snakeSV custom parameters:"
  echo "   --test_run             run the full pipeline on a test data."
  echo ""
  echo " Useful Snakemake parameters:"
  echo "   --use-conda            use conda to automatically install pre-configured packages"
  echo "   -j, --cores            number of cores"
  echo "   -k, --keep-going       go on with independent jobs if a job fails"
  echo "   -n, --dryrun           do not execute anything"
  echo "   -p, --printshellcmds   print out the shell commands that will be executed"
  echo "   -t, --timestamp        add a timestamp to all logging output"
  echo ""
  echo " Full list of parameters:"
  echo "   --help                 show Snakemake help (or snakemake -h)"
  echo ""
  echo "More info at https://github.com/RajLabMSSM/snakeSV"
  echo ""
  exit 0
}

if ! command -v snakemake &> /dev/null
  then
    echo "snakemake could not be found. Please install it first."
    exit 1
fi

# Check if snakeSV is in the PATH
#if ! command -v snakeSV &> /dev/null
#then
#  echo "snakeSV could not be found. Adding script to PATH"
  # Getting the running path
  MY_PATH="$(dirname -- "${BASH_SOURCE[0]}")" # relative
  MY_PATH="$(cd -- "$MY_PATH" && pwd)" # absolutized and normalized
  if [[ -z "$MY_PATH" ]] ; then
    # error; for some reason, the path is not accessible
    # to the script (e.g. permissions re-evaled after suid)
    exit 1  # fail
  fi
  export PATH=$MY_PATH:$PATH
#fi

if [ "$1" == "--test_run" ]; then
  snakeSV --configfile $(dirname $(which snakeSV))/example/tiny/config.yaml \
        --config workdir="$(dirname $(which snakeSV))/example/tiny/files/" OUT_FOLDER="${PWD}/results_snakesv" \
        --cores 1 --use-conda --use-singularity -p
  exit 0
fi

if [ "$1" == "" -o "$1" == "-h" -o \( "$1" != "--configfile" -a "$1" != "--help" \) ]; then
  display_help
  exit 0
fi

snakemake -s $(dirname $(which snakeSV))/workflow/Snakefile "$@"
